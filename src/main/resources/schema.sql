DROP TABLE IF EXISTS FRIENDSHIP ;
DROP TABLE IF EXISTS FilmGenre;
DROP TABLE IF EXISTS LIKES ;
DROP TABLE IF EXISTS Film;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS RATING ;
DROP TABLE IF EXISTS Genre;
CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
    ID INTEGER NOT NULL AUTO_INCREMENT,
    EMAIL VARCHAR(200) NOT NULL,
    LOGIN VARCHAR(150) NOT NULL,
    NAME VARCHAR(150),
    BIRTHDAY DATE,
    CONSTRAINT PK_USERS PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDSHIP (
    ID INTEGER NOT NULL AUTO_INCREMENT,
    USER_ID INTEGER NOT NULL,
    FRIEND_ID INTEGER NOT NULL,
    STATUS VARCHAR(20),
    CONSTRAINT PK_FRIENDSHIP PRIMARY KEY (ID),
    CONSTRAINT FK_FRIENDSHIP_USER FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
    CONSTRAINT FK_FRIENDSHIP_FRIEND FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC.RATING (
    ID INTEGER NOT NULL AUTO_INCREMENT,
    RATING_CODE VARCHAR(10) NOT NULL,
    DESCRIPTION VARCHAR(200),
    CONSTRAINT PK_RATING PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
    ID INTEGER NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(200) NOT NULL,
    DESCRIPTION VARCHAR(200) NOT NULL,
    RELEASE_DATE DATE NOT NULL,
    DURATION INTEGER,
    RATING_ID INTEGER,
    CONSTRAINT PK_FILM PRIMARY KEY (ID),
    CONSTRAINT FK_FILM_RATING FOREIGN KEY (RATING_ID) REFERENCES PUBLIC.RATING(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
    ID INTEGER NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(20) NOT NULL,
    CONSTRAINT PK_GENRE PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMGENRE (
    ID INTEGER NOT NULL AUTO_INCREMENT,
    FILM_ID INTEGER NOT NULL,
    GENRE_ID INTEGER NOT NULL,
    CONSTRAINT FK_FILMGENRE PRIMARY KEY (ID),
    CONSTRAINT FK_FILMGENRE_FILM FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
    CONSTRAINT FK_FILMGENRE_GENRE FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC.LIKES (
    ID INTEGER NOT NULL AUTO_INCREMENT,
    USER_ID INTEGER NOT NULL,
    FILM_ID INTEGER NOT NULL,
    CONSTRAINT PK_LIKES PRIMARY KEY (ID),
    CONSTRAINT FK_LIKES_USER FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
    CONSTRAINT FK_LIKES_FILM FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);